{"version":3,"sources":["Components/vis1.svg","Components/BarChart.js","Helpers/sample-any-illness.js","Helpers/sample-specific-illness.js","Components/BarChartNeg.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BarChart","props","state","isHidden","shouldWrapText","sample","scale","title","group","id","drawChart","bind","prevProps","prevState","this","setState","svg","d3","chart","append","attr","xScale","range","domain","map","s","language","padding","yScale","call","tickSize","tickFormat","width","selectAll","text","each","el","i","word","words","split","reverse","line","y","dy","parseFloat","tspan","pop","push","join","node","getComputedTextLength","lineHeight","barGroups","data","enter","checkAdjustmentY","a","value","g","bandwidth","color","on","actual","transition","duration","idx","divergence","toFixed","remove","height","className","key","Math","random","viewBox","Component","colors","AnyIllnessSample","SpecificIllnessSample","BarChartNeg","src","vis","App","activeIdx","handleChange","event","newValue","Tabs","indicatorColor","textColor","onChange","aria-label","Tab","label","Card","CardContent","Typography","variant","component","index","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0fc48c22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vis1.4206159d.svg\";","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./BarChart.css\";\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHidden: this.props.isHidden,\n      shouldWrapText: true\n    };\n\n    this.sample = this.props.sample;\n    this.scale = this.props.scale;\n    this.title = this.props.title;\n    this.group = this.props.group;\n    this.id = this.props.id;\n\n    this.drawChart = this.drawChart.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isHidden !== prevProps.isHidden) {\n      this.setState({\n        isHidden: this.props.isHidden\n      });\n    }\n    this.drawChart();\n  }\n\n  drawChart() {\n    const svg = d3.select(`#${this.id}`);\n    const margin = 100;\n    const width = 1400 - 2 * margin;\n    const height = 900 - 2 * margin;\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin}, ${margin})`);\n\n    const xScale = d3\n      .scaleBand()\n      .range([0, width])\n      .domain(this.sample.map(s => s.language))\n      .padding(0.1);\n\n    const yScale = d3\n      .scaleLinear()\n      .range([height,0])\n      .domain([0, this.scale]);\n\n    const makeYLines = () => d3.axisLeft().scale(yScale);\n\n    chart\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(d3.axisBottom(xScale));\n\n    chart\n      .append(\"g\")\n      .call(d3.axisLeft(yScale));\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"grid\")\n      .call(\n        makeYLines()\n          .tickSize(-width, 0, 0)\n          .tickFormat(\"\")\n      )\n      .attr(\"transform\", `translate(${width/2}, 0)`)\n\n    const ticks = svg.selectAll(\".tick\");\n    ticks.selectAll(\"text\").call(wrap, 150);\n\n    const barGroups = chart\n      .selectAll()\n      .data(this.sample)\n      .enter()\n      .append(\"g\");\n\n    barGroups\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"x\", g => xScale(g.language))\n      .attr(\"y\", g => yScale(g.value))\n      .attr(\"height\", g => height - yScale(g.value))\n      .attr(\"width\", xScale.bandwidth())\n      .attr(\"fill\", g => g.color)\n\n      .on(\"mouseenter\", function(actual, i) {\n        d3.selectAll(\".value\").attr(\"opacity\", 0);\n\n        d3.select(this)\n          .transition()\n          .duration(300)\n          .attr(\"opacity\", 0.6)\n          .attr(\"x\", a => xScale(a.language) - 5)\n          .attr(\"width\", xScale.bandwidth() + 10);\n\n        const y = yScale(actual.value);\n\n        chart\n          .append(\"line\")\n          .attr(\"id\", \"limit\")\n          .attr(\"x1\", 0)\n          .attr(\"y1\", y)\n          .attr(\"x2\", width)\n          .attr(\"y2\", y);\n\n        barGroups\n          .append(\"text\")\n          .attr(\"class\", \"divergence\")\n          .attr(\"x\", a => xScale(a.language) + xScale.bandwidth() / 2)\n          .attr(\"y\", a => checkAdjustmentY(a))\n          .attr(\"fill\", \"white\")\n          .attr(\"text-anchor\", \"middle\")\n          .text((a, idx) => {\n            const divergence = (a.value - actual.value).toFixed(1);\n\n            let text = \"\";\n            if (divergence > 0) text += \"+\";\n            text += `${divergence}%`;\n\n            return idx !== i ? text : \"\";\n          });\n      })\n      .on(\"mouseleave\", function() {\n        d3.selectAll(\".value\").attr(\"opacity\", 1);\n\n        d3.select(this)\n          .transition()\n          .duration(300)\n          .attr(\"opacity\", 1)\n          .attr(\"x\", a => xScale(a.language))\n          .attr(\"width\", xScale.bandwidth());\n\n        chart.selectAll(\"#limit\").remove();\n        chart.selectAll(\".divergence\").remove();\n      });\n\n    barGroups\n      .append(\"text\")\n      .attr(\"class\", \"value\")\n      .attr(\"x\", a => xScale(a.language) + xScale.bandwidth() / 2)\n      .attr(\"y\", a => checkAdjustmentY(a))\n      .attr(\"text-anchor\", \"middle\")\n      .text(a => `${a.value}%`);\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", -(height / 2) - margin)\n      .attr(\"y\", margin / 2.4)\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(\"Prevalence (in %)\");\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width / 2 + margin)\n      .attr(\"y\", height + margin * 2.5)\n      .attr(\"text-anchor\", \"middle\")\n      .text(this.group);\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", \"title\")\n      .attr(\"x\", width / 2 + margin)\n      .attr(\"y\", 40)\n      .attr(\"text-anchor\", \"middle\")\n      .text(this.title);\n\n    svg\n      .append(\"text\")\n      .attr(\"class\", \"source\")\n      .attr(\"x\", width - margin * 2.5)\n      .attr(\"y\", height + margin * 3)\n      .attr(\"text-anchor\", \"start\")\n      .text(\"Source: National Alliance on Mental Illness\");\n\n    function checkAdjustmentY(a) {\n      if (a.value <= 2) {\n        return yScale(a.value) - 10;\n      } else {\n        return yScale(a.value) + 50;\n      }\n    }\n\n    function wrap(text, width) {\n      text.each(function(el, i) {\n        const text = d3.select(this);\n        let words = text\n            .text()\n            .split(/\\s+/)\n            .reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.2, // ems\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text\n            .text(null)\n            .append(\"tspan\")\n            .attr(\"x\", 0)\n            .attr(\"y\", y)\n            .attr(\"dy\", dy + \"em\");\n\n        while ((word = words.pop())) {\n          line.push(word);\n          tspan.text(line.join(\" \"));\n          if (tspan.node().getComputedTextLength() > width) {\n            line.pop();\n            tspan.text(line.join(\" \"));\n            line = [word];\n            tspan = text\n              .append(\"tspan\")\n              .attr(\"x\", 0)\n              .attr(\"y\", y * line)\n              .attr(\"dy\", lineHeight + \"em\")\n              .text(word);\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={this.state.isHidden ? \"is-hidden container\" : \"container\"}\n      >\n        <svg key={Math.random()} id={this.id} viewBox=\"0 0 1400 1000\"></svg>\n      </div>\n    );\n  }\n}\n\nexport default BarChart;\n","const colors = ['#f0f9e8','#ccebc5','#a8ddb5','#7bccc4','#4eb3d3','#2b8cbe','#08589e'];\nconst AnyIllnessSample = [\n  {\n    language: 'All adults',\n    value: 19,\n    color: colors[0]\n  },\n  {\n    language: 'Asian adults',\n    value: 15,\n    color: colors[1]\n  },\n  {\n    language: 'Black adults',\n    value: 16,\n    color: colors[2]\n  },\n  {\n    language: 'Hispanic or Latin adults',\n    value: 17,\n    color: colors[3]\n  },\n  {\n    language: 'White adults',\n    value: 20,\n    color: colors[4]\n  },\n  {\n    language: 'Adult, who report mixed / multiracial',\n    value: 27,\n    color: colors[5]\n  },\n  {\n    language: 'Lesbian, gay and bisexual adults',\n    value: 37,\n    color: colors[6]\n  }\n];\n\nexport default AnyIllnessSample;","const colors = [\n    \"#feebe2\",\n    \"#fcc5c0\",\n    \"#fa9fb5\",\n    \"#f768a1\",\n    \"#dd3497\",\n    \"#ae017e\",\n    \"#7a0177\"\n  ];\n\nconst SpecificIllnessSample = [\n    {\n      language: 'Schizophrenia',\n      value: 1,\n      color: colors[4]\n    },\n    {\n      language: 'Borderline Personality Disorder',\n      value: 1,\n      color: colors[5]\n    },\n    {\n      language: 'Obsessive Compulsive Disorder',\n      value: 1,\n      color: colors[6]\n    },\n    {\n      language: 'Post-traumatic Stress Disorder',\n      value: 4,\n      color: colors[1]\n    },\n    {\n        language: 'Dual diaggnosis',\n        value: 4,\n        color: colors[3]\n    },\n    {\n      language: 'Depression',\n      value: 7,\n      color: colors[2]\n    },\n    {\n      language: 'Anxiety disorders',\n      value: 19,\n      color: colors[0]\n    }\n  ];\n\n  export default SpecificIllnessSample;","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./BarChartNeg.css\";\nimport vis from \"./vis1.svg\";\n\nclass BarChartNeg extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isHidden: this.props.isHidden\n    };\n    this.id = this.props.id;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isHidden !== prevProps.isHidden) {\n      this.setState({\n        isHidden: this.props.isHidden\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={this.state.isHidden ? \"is-hidden container\" : \"container\"}\n      >\n        <img src={vis} />\n      </div>\n    );\n  }\n}\n\nexport default BarChartNeg;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport BarChart from \"./Components/BarChart\";\nimport AnyIllnessSample from \"./Helpers/sample-any-illness\";\nimport SpecificIllnessSample from \"./Helpers/sample-specific-illness\";\nimport \"typeface-roboto\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport BarChartNeg from \"./Components/BarChartNeg\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeIdx: 0\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event, newValue) {\n    this.setState({\n      activeIdx: newValue\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Tabs\n          value={this.state.activeIdx}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={this.handleChange}\n          aria-label=\"vis tabs\"\n        >\n          <Tab label=\"Visualization 1\" />\n          <Tab label=\"Visualization 2\" />\n        </Tabs>\n\n        <Card className={this.state.activeIdx !== 0 ? \"is-hidden Card\" : \"Card\"}>\n          <CardContent>\n            <Typography variant=\"body2\" component=\"p\">\n              Built using Procreate, Sketch, Adobe Illustrator & React.js.\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <BarChartNeg\n          value={this.state.activeIdx}\n          index={0}\n          id=\"uk-immigration\"\n          isHidden={this.state.activeIdx !== 0}\n        ></BarChartNeg>\n\n        <Card className={this.state.activeIdx !== 1 ? \"is-hidden Card\" : \"Card\"}>\n          <CardContent>\n            <Typography variant=\"body2\" component=\"p\">\n              Built using D3.js & React.js.\n            </Typography>\n          </CardContent>\n        </Card>\n        <BarChart\n          title=\"12 month prevalence (in %) of any mental illness (all U.S. adults)\"\n          group=\"Adult groups\"\n          value={this.state.activeIdx}\n          index={1}\n          isHidden={this.state.activeIdx !== 1}\n          sample={AnyIllnessSample}\n          scale={40}\n          id=\"any-illness\"\n        ></BarChart>\n        <BarChart\n          title=\"12 month prevalence (in %) of common mental illnesses (all U.S. adults)\"\n          value={this.state.activeIdx}\n          index={1}\n          isHidden={this.state.activeIdx !== 1}\n          group=\"Illnesses\"\n          sample={SpecificIllnessSample}\n          scale={20}\n          id=\"specific-illness\"\n        ></BarChart>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}